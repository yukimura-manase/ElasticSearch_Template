 
< Elasticsearchでの検索queryについて >


  1. すべてのドキュメントを検索

  2. 指定した単語を含むドキュメントを検索

  3. and-条件でドキュメントを検索

  4. not-検索

  5. or-検索

  6. 特定のワードを重み付けして検索

  7. ハイライト検索

  8. 絞り込み検索

  9. 検索結果をソート


----------------------------------------------------------------------------------------------------------------------------------------

< すべてのドキュメントを検索 >

すべてのドキュメントを検索するには、/[インデックス名]/_searchに対してGETメソッドでリクエストします。

GET/book/_search結果は以下のようになります。


< Requestデータ >

GET/book/_search

< Responseデータ >

{
  "took" : 210,
  "timed_out" : false,
  "_shards" : {
    "total" : 1,
    "successful" : 1,
    "skipped" : 0,
    "failed" : 0
  },
  "hits" : {
    "total" : {
      "value" : 1,
      "relation" : "eq"
    },
    "max_score" : 1.0,
    "hits" : [
      {
        "_index" : "book",
        "_type" : "_doc",
        "_id" : "1",
        "_score" : 1.0,
        "_source" : {
          "機体名" : "ロボ玉試作1号機",
          "攻撃力" : 1000,
          "守備力" : 1000,
          "スピード" : 1000,
          "Pirot" : "ロボ玉"
        }
      }
    ]
  }
}

hitsの中に、今回の検索結果が格納されています。totalの中のvalueが、ヒットした件数になります。

今回は5件がヒットしたことになります。さらに同じhitsという項目があり、この中に具体的にヒットしたドキュメントの内容が返されます。

デフォルトでは最大10件しか返さないため、/[インデックス名]/_search?size=20のようにsizeパラメータで検索件数を指定することもできます。




----------------------------------------------------------------------------------------------------------------------------------------

< 指定した単語を含むドキュメントを検索 >

ある単語を含むドキュメントを検索するには、リクエストbodyに以下のフォーマットで記載します。

[ bodyのフォーマット ]

  {
    "query":{
      "match":{
        "[フィールド名]": "[値]"
      }
    }
  }



< Requestデータ >

GET /book/_search
{
  "query": {
    "match": {
      "Pirot": "ロボ玉"
    }
  }
}



< Responseデータ >


----------------------------------------------------------------------------------------------------------------------------------------

< and条件でドキュメントを検索 >

複数の条件をどちらも満たす検索(and検索)を行うには、リクエストbodyにて以下のフォーマットで指定します。

[ bodyのフォーマット ]

  {
    "query":{
      "bool":{
        "must":[
          {1つ目の条件},
          {2つ目の条件}
        ]
      }
    }
  }

< Requestデータ >

< Responseデータ >



----------------------------------------------------------------------------------------------------------------------------------------

< not検索 >

[ bodyのフォーマット ]

  {
    "query":
    {
      "bool":{
        "must_not":[
          {条件}
        ]
      }
    }
  }



< Requestデータ >

< Responseデータ >


----------------------------------------------------------------------------------------------------------------------------------------

< or検索 >

[ bodyのフォーマット ]

  {
    "query":{
      "bool":{
        "should":[
          {1つ目の条件},
          {2つ目の条件}
        ]
      }
    }
  }


< Requestデータ >

< Responseデータ >



----------------------------------------------------------------------------------------------------------------------------------------

< ハイライト検索 >

highlight文を使用することで検索結果について、一致した単語をハイライト表示させることが可能です。

highlight表示させるには、query文の後にhighlight文を追加します。

[ highlight文のフォーマット ]

    "highlight":{
      "fields":{
        "フィールド名": {}
      }
    }



  {
    "query":{
      "match":{
        "robotama": "ロボ玉試作1号機"
      }
    },
    "highlight":{
      "fields":{
        "robotama": {}
      }
    }
  }


< Requestデータ >

< Responseデータ >


----------------------------------------------------------------------------------------------------------------------------------------

< 範囲での絞り込み検索 >

範囲での絞り込み検索をするには、rangeを使用します。

特定のフィールドの値がある値以下であるドキュメントを探したい時は、

{
  "query": {
    "range": {
      "フィールド名": {
        "lte": 値
      }
    }
  }
}



特定のフィールドの値がある値以上であるドキュメントを探したい時は、


{
  "query": {
    "range": {
      "フィールド名": {
        "gte": 値
      }
    }
  }
}


< Requestデータ >

< Responseデータ >


----------------------------------------------------------------------------------------------------------------------------------------

< 検索結果をソート >

リクエストbodyに「 sort文 」を追加する！

ascending(昇順・上昇) または descending(降順・下降)


[ sort文のフォーマット ]

    "sort": [
      {
        "フィールド名": {
          "order": "asc" or "desc"
        }
      }
    ]





  {
    "query": {
      "range": {
        "robotama": {
          "lte": 値
        }
      }
    },
    "sort": [
      {
        "robotama": {
          "order": "asc"
        }
      }
    ]
  }





< Requestデータ >

< Responseデータ >


----------------------------------------------------------------------------------------------------------------------------------------


Elasticsearch マッピング
Elasticsearch Mapping — ドキュメントスキーマと検索精度を最適化するためのマッピング定義




