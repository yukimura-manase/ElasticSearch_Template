

< ElasticSearchの条件 >

    1. ElasticSearchには、JSON形式でデータを投入する必要がある！

    2. SQLみたいに、Elasticsearchも事前にデータ構造を決めた上で、データを投入しなければなりません。
    
        => Elasticsearchはindex-type-idの構造になっています。 データを投入する時に、indexとtypeは指定する必要があります


Elasticsearchのインストールからデータ投入まで
https://qiita.com/onlyzs/items/045fb33dbd6bd781ce23#:~:text=SQL%E3%81%BF%E3%81%9F%E3%81%84%E3%81%AB%E3%80%81Elasticsearch%E3%82%82%E4%BA%8B%E5%89%8D%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0%E3%82%92%E6%B1%BA%E3%82%81%E3%81%9F%E4%B8%8A%E3%81%A7%E3%80%81%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%8A%95%E5%85%A5%E3%81%97%E3%81%AA%E3%81%91%E3%82%8C%E3%81%B0%E3%81%AA%E3%82%8A%E3%81%BE%E3%81%9B%E3%82%93%E3%80%82%20Elasticsearch%E3%81%AFindex-type-id%E3%81%AE%E6%A7%8B%E9%80%A0%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%84%E3%81%BE%E3%81%99%E3%80%82%20%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%8A%95%E5%85%A5%E3%81%99%E3%82%8B%E6%99%82%E3%81%AB%E3%80%81index%E3%81%A8type%E3%81%AF%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E5%BF%85%E8%A6%81%E3%81%8C%E3%81%82%E3%82%8A%E3%81%BE%E3%81%99%E3%81%8C%E3%80%81id%E3%81%AF%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%AA%E3%81%8F%E3%81%A6%E3%81%84%E3%81%84%E3%81%A7%E3%81%99%E3%80%82,%E3%81%93%E3%81%AE%E5%A0%B4%E5%90%88%E3%81%AF%E3%80%81%E8%87%AA%E5%8B%95%E3%81%A722%E6%A1%81%E3%81%AEUUIDs%E3%81%8C%E5%85%A5%E3%81%A3%E3%81%A6%E3%81%8D%E3%81%BE%E3%81%99%E3%80%82%20curl%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%81%A7%E3%81%8D%E3%81%BE%E3%81%99%E3%81%8C%E3%80%81kibana%E3%81%AEDev%20Tools%E3%81%A7%E3%81%AF%E3%82%82%E3%81%A3%E3%81%A8%E4%BE%BF%E5%88%A9%E3%81%A0%E3%81%A8%E6%80%9D%E3%81%84%E3%81%BE%E3%81%99%E3%80%82


< 仕様書の条件 >


    < 概要 >
        0. Webアプリケーションにおいて、データセット中のテキスト検索が可能なファイルを対象に、全文より検索できる機能を新設し、次の機能を持って実現すること！

    < 細かい条件 >

        1. 全文対象の検索
        
        
            1-1. データ検索エリアに、全文検索用のキーワード入力フォームを設けて、全登録データ中のPDF, Word, Excel, ファイル等、「テキストデータを保有するファイル」について、「キーワード検索」が可能であること。

                => 「テキストデータを保有するファイル」について、「キーワード検索」が可能！

                => これを実現するための「データ投入構造」(mapping)を定義する！
            

            1-2. 検索条件は、「データ種別の選択を必須」としたうえで、全文検索の検索条件であること。
                加えて、その他の既設条件である期間、経緯度を指定した短径距離, ファイル名, メタデータ内フリーワードを指定したうえでも、検索可能であること。

                => 

            1-3. 検索方法は、一般的な方法(Google検索の方法等)、「検索演算子」を利用する方法で行うことが可能であること。

                => 


        2. 検索エンジン


総務省のデータを Elasticsearch にぶち込んで、緯度経度から市区町村の何丁目までを取り出す
https://qiita.com/amay077/items/9fb99ab9e6801033977d


【ElasticSearch】WordデータをElasticSearchに投入
https://qiita.com/miyadev55/items/d22fc379171fd02a142b



-------------------------------------------------------------------------------------------------------------------------------------------------------

< データ投入のための構造定義(mapping定義) >


PUT /book
{
    "mappings":{
        "properties":{
            "title":{
                "type":"keyword"
            },
            "author":{
                "type":"keyword"
            },
            "publisherName":{
                "type":"keyword"
            },
            "isbn":{
                "type":"keyword"
            },
            "itemCaption":{
                "type":"text"
            },
            "itemPrice":{
                "type":"long"
            }
        }
    }
}


-------------------------------------------------------------------------------------------------------------------------------------------------------



< データ投入ターゲット >

# Wordファイル拡張子
.doc, .dot, .docx

# Excelファイル拡張子
.xml, xlsx

# PowerPointファイル拡張子
.ppt, .pptx, .pptm

# PDFファイル拡張子
.pdf

# CSVファイル拡張子
.csv

# 汎用テキストファイル
.txt






ファイル形式	ファイル区分	用途
BMP形式	画像	windowsの標準的な画像ファイル
JPEG形式	画像	写真向き
TIFF形式	画像	ビットマップ画像用
PNG形式	画像	イラスト向き

--------------------------------------------------------------------------
テキスト形式	テキストファイル	通常ファイル
PDF形式	テキストファイル	Adobe Readerで読める
CSV形式	テキストファイル	表計算ソフト用データ
ASP形式	テキストファイル	Microsoftアプリケーションサービス用
XML形式	テキストファイル	ソフトウェア間でデータを交換する用
WORD	Microsoft Office	Microsoft Word用
Excel	Microsoft Office	Microsoft Excel用
PPT	Microsoft Office	Microsoft PowerPoint用
Access	Microsoft Office	Microsoft Access用
--------------------------------------------------------------------------


AI形式	Adobe系	Adobe Illustrator用
INDD形式	Adobe系	Adobe InDesign用
PSD形式	Adobe系	Adobe Photoshop用
EPS形式	Adobe系	PostScript用




データ投入ターゲット => テキストデータを保有するファイル

pdf、txt、ai…色々なデータ形式をまとめて解説
https://blog.sei-syou.com/2019-09-09/


-------------------------------------------------------------------------------------------------------------------------------------------------------

< mappingで構造を定義する！ >   

# 1データセット(1zipファイル)の中身を解析して、targetファイルを1つ1つElasticSearchに投入する！


< 必要なフィールド >

# file_type(拡張子)から判定したfileType => 拡張子で判定する

# file名

# 所属するデータセット名

# データ種別id => データ種別idを登録する

# データ種別名


# ファイル内のテキスト情報

    "content"



oceandb_data_test\\1\\04e863dc-6284-46f9-ae81-2eed640c8a50.zip'



target_array

    [
        'data/E218003/DATA/DRAWING/SETSUMEI.pdf', 
        'data/E218003/RESULT/HOUKOKU.pdf', 
        'data/E218003/RESULT/NEW/BOYINB_P.shp.xml', 
        'data/E218003/RESULT/NEW/BOYSPP_P.shp.xml', 
        'data/E218003/RESULT/NEW/DEPCNT_L.shp.xml', 
        'data/E218003/RESULT/NEW/DRGARE_A.shp.xml', 
        'data/E218003/RESULT/NEW/LIGHTS_P.shp.xml', 
        'data/E218003/RESULT/NEW/M_QUAL_A.shp.xml', 
        'data/E218003/RESULT/NEW/OBSTRN_P.shp.xml', 
        'data/E218003/RESULT/NEW/SBDARE_P.shp.xml', 
        'data/E218003/RESULT/NEW/SLCONS_L.shp.xml'
    ]



-------------------------------------------------------------------------------------------------------------------------------------------------------

< 2022/03/01 >

ディレクトリ名: 15内のzipファイルサーチ結果
['C:\\Users\\suda\\Desktop\\oceandb_data_test\\15\\da610e27-9d5e-4a2a-95c9-75c8b651eff8.zip']


zip_f
<zipfile.ZipFile filename='C:\\Users\\suda\\Desktop\\oceandb_data_test\\15\\da610e27-9d5e-4a2a-95c9-75c8b651eff8.zip' mode='r'>

name_list
[
    'data/[ï@2è«1ë┬1]üyÄOèCèCæµ24ìåüzù▀ÿaî│öNôxôîï₧ÿpÆ¬ù¼è╧æ¬ò±ìÉÅæé╠Æ±Åoé╔é┬éóé─.pdf',
     'data/ù¥ÿ_ôIîWÉööΣ_5m_ò/1.xlsx',
      'data/ù¥ÿ_ôIîWÉööΣ_7m_ò/2.xlsx',
       'data/ù¥ÿ_ôIîWÉööΣ_9m_ò/3.xlsx',
        'data/5m/5m.HA', 
        'data/5m/5m.HC',
         'data/5m/5m.SM',
          'data/7m/7m.HA',
           'data/7m/7m.HC',
            'data/7m/7m.SM',
             'data/9m/9m.HA',
              'data/9m/9m.HC', 'data/9m/9m.SM', 'files.json', 'metadata.json', 'geometry.geojson']


target_array
['data/[ï@2è«1ë┬1]üyÄOèCèCæµ24ìåüzù▀ÿaî│öNôxôîï₧ÿpÆ¬ù¼è╧æ¬ò±ìÉÅæé╠Æ±Åoé╔é┬éóé─.pdf', 'data/ù¥ÿ_ôIîWÉööΣ_5m_ò/1.xlsx', 'data/ù¥ÿ_ôIîWÉööΣ_7m_ò/2.xlsx', 'data/ù¥ÿ_ôIîWÉööΣ_9m_ò/3.xlsx']

target_contents
C:\Users\suda\Desktop\oceandb_data_test\data\[ï@2è«1ë┬1]üyÄOèCèCæµ24ìåüzù▀ÿaî│öNôxôîï₧ÿpÆ¬ù¼è╧æ¬ò±ìÉÅæé╠Æ±Åoé╔é┬éóé─.pdf
ここがロボ玉！

target_contents
C:\Users\suda\Desktop\oceandb_data_test\data\ù¥ÿ_ôIîWÉööΣ_5m_ò\1.xlsx
ここがロボ玉！

target_contents
C:\Users\suda\Desktop\oceandb_data_test\data\ù¥ÿ_ôIîWÉööΣ_7m_ò\2.xlsx
ここがロボ玉！

target_contents
C:\Users\suda\Desktop\oceandb_data_test\data\ù¥ÿ_ôIîWÉööΣ_9m_ò\3.xlsx
ここがロボ玉！


-------------------------------------------------------------------------------------------------------------------------------------------------------

< バイナリーファイルの解析？ >

1. Pythonでオフィス製品の解析？

2. プラグインとして、オフィスを解析するプラグインを組み込む?


Word、Excel、PowerPoint のファイル形式リファレンス
https://docs.microsoft.com/ja-jp/deployoffice/compat/office-file-format-reference



-------------------------------------------------------------------------------------------------------------------------------------------------------

< ElasticSearchサーバーにデータを投入する！ >

Elasticsearch用語	                      説明	                                      RDBMSで言うところの…

  インデックス	                        ドキュメントを格納する場所	                  データベース
  ドキュメントタイプ・マッピング	       ドキュメントの構成やフィールド型などの定義	    テーブル
  ドキュメント	                        格納される１つの文章の単位	                  レコード
  フィールド	                          ドキュメント内のKeyとValueの組み合わせ	       カラム




-------------------------------------------------------------------------------------------------------------------------------------------------------

< テキスト抽出のテスト実行！ >

cd C:\Users\suda\Desktop\海洋先端技術研究所\全文検索システム関連

Python TextParce.py



-------------------------------------------------------------------------------------------------------------------------------------------------------



< データ投入のための構造定義(mapping定義) >


1. classification_id => データ種別id => クリア

2. classification_name => データ種別名 => クリア

3. deataset_path => データセットまでのPath => クリア

4. dataset_name => データセット名(所属するデータセット名) => zipファイル名 => クリア

5. file_name => ファイル名 => クリア

6. file_type => ファイルの拡張子・型 => クリア

7. file_paht => ファイルまでのPath => クリア

8. text_content => ファイル内のテキストデータ(全文検索対象) => クリア

9. file_create_date => ファイルの作成日時


Pythonでファイルのタイムスタンプ（作成日時や更新日時）を取得
https://note.nkmk.me/python-os-stat-file-timestamp/




PUT /filedata
{
    "mappings":{
        "properties":{
            "classification_id":{
                "type":"keyword"
            },
            "classification_name":{
                "type":"keyword"
            },
            "publisherName":{
                "type":"keyword"
            },
            "isbn":{
                "type":"keyword"
            },
            "itemCaption":{
                "type":"text"
            },
            "itemPrice":{
                "type":"long"
            }
        }
    }
}




再度マッピングを確認してみます。

< Requestデータ >

GET /book/_mapping


結果は以下のようになり、指定したマッピング付きでインデックスが作成されました。

< Responseデータ >

{
  "book" : {
    "mappings" : {
      "properties" : {
        "author" : {
          "type" : "keyword"
        },
        "isbn" : {
          "type" : "keyword"
        },
        "itemCaption" : {
          "type" : "text"
        },
        "itemPrice" : {
          "type" : "long"
        },
        "publisherName" : {
          "type" : "keyword"
        },
        "title" : {
          "type" : "keyword"
        }
      }
    }
  }
}




